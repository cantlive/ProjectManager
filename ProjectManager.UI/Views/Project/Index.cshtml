@using ProjectManager.Core.Models
@using ProjectManager.DataAccess.Models
@model ProjectListDto

@functions {
    string GetSortUrl(string sortBy)
    {
        var queryParams = new Dictionary<string, string>
        {
            { "projectName", Model.Filter.ProjectName },
            { "startDateFrom", Model.Filter.StartDateFrom?.ToString("yyyy-MM-dd") },
            { "startDateTo", Model.Filter.StartDateTo?.ToString("yyyy-MM-dd") },
            { "priority", Model.Filter.Priority?.ToString() },
            { "sortBy", sortBy }
        };

        var queryString = string.Join("&", queryParams
            .Where(p => !string.IsNullOrEmpty(p.Value))
            .Select(p => $"{p.Key}={Uri.EscapeDataString(p.Value)}"));

        return Url.Action("Index") + "?" + queryString;
    }
}

<h2>Projects</h2>

<a href="@Url.Action("Create")" class="create-project-btn">Create New Project</a>

<form method="get">
    <div class="filter">
        <label for="projectName">Name:</label>
        <input name="projectName" value="@Model.Filter.ProjectName" />

        <label for="startDateFrom">Start Date From:</label>
        <input type="date" name="startDateFrom" value="@Model.Filter.StartDateFrom?.ToString("yyyy-MM-dd")" />

        <label for="startDateTo">Start Date To:</label>
        <input type="date" name="startDateTo" value="@Model.Filter.StartDateTo?.ToString("yyyy-MM-dd")" />

        <label for="priority">Priority:</label>
        <select name="priority">
            <option value="">All</option>
            @foreach (var priority in Enum.GetValues(typeof(ProjectPriority)).Cast<ProjectPriority>())
            {
                <option value="@priority" selected="@(priority == Model.Filter.Priority)">
                    @Enum.GetName(typeof(ProjectPriority), priority)
                </option>
            }
        </select>

        <input type="hidden" name="sortBy" value="@Model.SortBy" />

        <button class="filter-project-btn" type="submit">Filter</button>
    </div>
</form>

<table>
    <tr>
        <th>
            Name
            <ul class="sort-buttons">
                <li><a href="@GetSortUrl("Name")">▲</a></li>
                <li><a href="@GetSortUrl("Name_desc")">▼</a></li>
            </ul>
        </th>
        <th>
            Start Date
            <ul class="sort-buttons">
                <li><a href="@GetSortUrl("StartDate")">▲</a></li>
                <li><a href="@GetSortUrl("StartDate_desc")">▼</a></li>
            </ul>
        </th>
        <th>
            End Date
            <ul class="sort-buttons">
                <li><a href="@GetSortUrl("EndDate")">▲</a></li>
                <li><a href="@GetSortUrl("EndDate_desc")">▼</a></li>
            </ul>
        </th>
        <th>
            Priority
            <ul class="sort-buttons">
                <li><a href="@GetSortUrl("Priority")">▲</a></li>
                <li><a href="@GetSortUrl("Priority_desc")">▼</a></li>
            </ul>
        </th>
        <th>Customer Company</th>
        <th>Contractor Company</th>
        <th>Project Manager</th>
        <th>Employees</th>
        <th>Files</th>
        <th class="actions-column">Actions</th>
    </tr>

    @foreach (var project in Model.Projects)
    {
        <tr>
            <td>@project.Name</td>
            <td>@project.StartDate.ToShortDateString()</td>
            <td>@project.EndDate.ToShortDateString()</td>
            <td>@Enum.GetName(typeof(ProjectPriority), project.Priority)</td>
            <td>@project.CustomerCompany</td>
            <td>@project.ContractorCompany</td>
            <td>@project.ProjectManager?.FullName</td>
            <td>
                <ul>
                    @foreach (var employee in project.Employees)
                    {
                        <li>@employee.Employee.FullName</li>
                    }
                </ul>
            </td>
            <td>
                <ul>
                    @if (project.FilePaths != null && project.FilePaths.Any())
                    {
                        foreach (var filePath in project.FilePaths)
                        {
                            <li class="file-name" title="@filePath">@System.IO.Path.GetFileName(filePath)</li>
                        }
                    }
                    else
                    {
                        <li>No files uploaded</li>
                    }
                </ul>
            </td>
            <td class="actions-column">
                <div class="action-buttons">
                    <a href="@Url.Action("Edit", new { id = project.Id })" class="btn edit-btn">Edit</a>
                    <a href="@Url.Action("Delete", new { id = project.Id })" class="btn delete-btn">Delete</a>
                </div>
            </td>
        </tr>
    }
</table>

<script>
    document.addEventListener("DOMContentLoaded", function() {
        const sortButtons = document.querySelectorAll('.sort-buttons a');

        sortButtons.forEach(link => {
            if (window.location.href === link.href) {
                link.classList.add('active');
            } else {
                link.classList.remove('active');
            }
        });
    });
</script>